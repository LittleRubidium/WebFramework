<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c4df3e43-20d6-4e23-8699-8e4f2a130c67" name="Default Changelist" comment="first commit">
      <change afterPath="$PROJECT_DIR$/framework/cobra/hade_command_distributed.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/command/cron.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/command/env.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/contract/distributed.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/contract/env.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/provider/distributed/provider_local.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/provider/distributed/service_local.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/provider/env/provider.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/provider/env/provider_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/provider/env/service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/framework/util/console.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/env.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/console/command/demo/foo.go" beforeDir="false" afterPath="$PROJECT_DIR$/app/console/command/demo/foo.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/app/console/kernel.go" beforeDir="false" afterPath="$PROJECT_DIR$/app/console/kernel.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/framework/cobra/command.go" beforeDir="false" afterPath="$PROJECT_DIR$/framework/cobra/command.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/framework/cobra/hade_command.go" beforeDir="false" afterPath="$PROJECT_DIR$/framework/cobra/hade_command.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/framework/command/kernel.go" beforeDir="false" afterPath="$PROJECT_DIR$/framework/command/kernel.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/framework/container.go" beforeDir="false" afterPath="$PROJECT_DIR$/framework/container.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/framework/contract/app.go" beforeDir="false" afterPath="$PROJECT_DIR$/framework/contract/app.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/framework/provider/app/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/framework/provider/app/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/framework/util/exec.go" beforeDir="false" afterPath="$PROJECT_DIR$/framework/util/exec.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/hade" beforeDir="false" afterPath="$PROJECT_DIR$/hade" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/storage/log.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/storage/runtime.go" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedIndex" value="1" />
  </component>
  <component name="ProjectId" id="2FNJTT3yrYtG9qqH0zFZmuI2qJ6" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="restartRequiresConfirmation" value="false" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/app/console" />
      <recent name="$PROJECT_DIR$/framework" />
      <recent name="$PROJECT_DIR$/app" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestHadeEnvProvider in github.com/gohade/hade/framework/provider/env">
    <configuration name="go build github.com/gohade/hade (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="WebFramework" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="github.com/gohade/hade" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/gohade/hade" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true">
      <module name="WebFramework" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <package value="webFramework" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build webFramework" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="WebFramework" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <filePath value="$PROJECT_DIR$/main.go" />
      <directory value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="TestHadeEnvProvider in github.com/gohade/hade/framework/provider/env" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="WebFramework" />
      <working_directory value="$PROJECT_DIR$/framework/provider/env" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/gohade/hade/framework/provider/env" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTestHadeEnvProvider\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test webFramework/framework" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="WebFramework" />
      <working_directory value="$PROJECT_DIR$/framework" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="webFramework/framework" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestHadeEnvProvider in github.com/gohade/hade/framework/provider/env" />
        <item itemvalue="Go Build.go build github.com/gohade/hade (1)" />
        <item itemvalue="Go Build.go build github.com/gohade/hade" />
        <item itemvalue="Go Test.go test webFramework/framework" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="first commit" />
    <option name="LAST_COMMIT_MESSAGE" value="first commit" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>